
public class MuistavaTuotevarasto extends Tuotevarasto {
    private Muutoshistoria historia;
    
    public MuistavaTuotevarasto(String tuotenimi,double tilavuus,double alkuSaldo){
        super(tuotenimi,tilavuus);
        historia = new Muutoshistoria();
        historia.lisaa(alkuSaldo);
        super.lisaaVarastoon(alkuSaldo);        
    }
    
    public String historia(){
        return historia.toString();
    }
    
    @Override
    public void lisaaVarastoon(double maara){
        super.lisaaVarastoon(maara);
        historia.lisaa(getSaldo());
    }
    
    @Override
    public double otaVarastosta(double maara){
        double otettu = super.otaVarastosta(maara);
        historia.lisaa(getSaldo());
        
        return otettu;
    }
    
    public void tulostaAnalyysi(){
        System.out.println("Tuote: " + getNimi() + "\nHistoria: " + historia.toString() + "\nSuurin tuotemäärä: " +
                historia.maxArvo() + "\nPienin tuotemäärä: " + historia.minArvo() + "\nKeskiarvo: " + historia.keskiarvo());
    }
}



import java.util.ArrayList;

public class Muutoshistoria {
    private ArrayList<Double> historia;
    
    public Muutoshistoria(){
        historia = new ArrayList();
    }
    
    public void lisaa(double tilanne){
        this.historia.add(tilanne);
    }
    
    public void nollaa(){
        historia = new ArrayList();
    }
 
    public double maxArvo(){
        if(historia.isEmpty()){
           return 0; 
        }        
        double max = historia.get(0);
        for(Double arvo: historia){
            if(max < arvo){
                max = arvo;
            }
        }        
        return max;
    }
    
    public double minArvo(){
        if(historia.isEmpty()){
            return 0;
        }        
        double min = historia.get(0);
        for(Double arvo:historia){
            if(min > arvo){
                min = arvo;
            }
        }
        return min;
    }
    
    public double keskiarvo(){
        if(historia.isEmpty()){
            return 0;
        }        
        double summa = 0;
        
        for(Double arvo:historia){
            summa = summa + arvo;
        }        
        return summa/historia.size();
    }
    
    
    public String toString(){
        return historia.toString();
    }
}




public class Tuotevarasto extends Varasto {
    private String tuotenimi;
    
    public Tuotevarasto(String tuotenimi,double tilavuus){
        super(tilavuus);
        this.tuotenimi = tuotenimi;
    }
    
    public String getNimi(){
        return this.tuotenimi;
    }
    
    public void setNimi(String uusiNimi){
        this.tuotenimi = uusiNimi;
    }

    @Override
    public String toString() {
        return tuotenimi + ": " + super.toString();
    }
}





public class Varasto {

    private double tilavuus;
    private double saldo;

    public Varasto(double tilavuus) {
        if (tilavuus > 0.0) {
            this.tilavuus = tilavuus;
        } else {
            this.tilavuus = 0.0;
        }

        this.saldo = 0.0;
    }

    public double getSaldo() {
        return this.saldo;
    }

    public double getTilavuus() {
        return this.tilavuus;
    }

    public double paljonkoMahtuu() {
        return this.tilavuus - this.saldo;
    }

    public void lisaaVarastoon(double maara) {
        if (maara < 0) {
            return;
        }
        if (maara <= paljonkoMahtuu()) {
            this.saldo = this.saldo + maara;
        } else {
            this.saldo = this.tilavuus;
        }
    }

    public double otaVarastosta(double maara) {
        if (maara < 0) {
            return 0.0;
        }
        if (maara > this.saldo) {
            double kaikkiMitaVoidaan = this.saldo;
            this.saldo = 0.0;
            return kaikkiMitaVoidaan;
        }

        this.saldo = this.saldo - maara;
        return maara;
    }

    public String toString() {
        return "saldo = " + this.saldo + ", tilaa " + paljonkoMahtuu();
    }
}
////////////////////////////////////////////////////////
import java.util.Scanner;

public class Kauppa {

    private Varasto varasto;
    private Scanner lukija;

    public Kauppa(Varasto varasto, Scanner lukija) {
        this.varasto = varasto;
        this.lukija = lukija;
    }

    // metodi jolla hoidetaan yhden asiakkaan asiointi kaupassa
    public void asioi(String asiakas) {
        Ostoskori kori = new Ostoskori();
        System.out.println("Tervetuloa kauppaan " + asiakas);
        System.out.println("valikoimamme:");

        for (String tuote: this.varasto.tuotteet()) {
            System.out.println(tuote);
        }

        while (true) {
            System.out.print("mitä laitetaan ostoskoriin (pelkkä enter vie kassalle):");
            String tuote = lukija.nextLine();
            if (tuote.isEmpty()) {
                break;
            }

            
            if(varasto.saldo(tuote) > 0){
                kori.lisaa(tuote,varasto.hinta(tuote));
                varasto.ota(tuote);
            }
            
            
            
            // tee tänne koodi joka lisää tuotteen ostoskoriin jos sitä on varastossa
            // ja vähentää varastosaldoa
            // älä koske muuhun koodiin!

        }

        System.out.println("ostoskorissasi on:");
        kori.tulosta();
        System.out.println("korin hinta: " + kori.hinta());
    }
}



public class Ostos {
    private String tuote;
    private int kpl;
    private int yksikkohinta;
        
    public Ostos(String tuote, int kpl, int yksikkohinta){
        this.tuote = tuote;
        this.kpl = kpl;
        this.yksikkohinta = yksikkohinta;
    }
    
    public int hinta(){
        return this.kpl * this.yksikkohinta;
    }
            
    public void kasvataMaaraa(){
        this.kpl = this.kpl + 1;
    }
    
    public String toString(){
        return this.tuote + ": " + this.kpl;
    }
    
    
}


import java.util.Map;
import java.util.HashMap;

public class Ostoskori {
    private Map<String, Ostos> tuotteet;
    
    public Ostoskori(){
        tuotteet = new HashMap();
    }
    
    public void lisaa(String tuote, int hinta){
        if(tuotteet.containsKey(tuote)){
            tuotteet.get(tuote).kasvataMaaraa();
        }else{        
            tuotteet.put(tuote, new Ostos(tuote,1,hinta));
        }
    }
    
    public int hinta(){
        int kokonaisHinta = 0;
        for(Ostos yksOstos:tuotteet.values()){
            kokonaisHinta = kokonaisHinta + yksOstos.hinta();
        }
        return kokonaisHinta;
    }
    
    public void tulosta(){
        for(Ostos yksOstos:tuotteet.values()){
            System.out.println(yksOstos.toString());
        }
    }
    
    
    
    import java.util.Map;
import java.util.HashMap;
import java.util.Set;


public class Varasto {
    private Map<String,Integer> tavaratHinta;
    private Map<String,Integer> tavaratSaldo;
    
    public Varasto(){
        tavaratHinta = new HashMap();
        tavaratSaldo = new HashMap();
    }
    
    public void lisaaTuote(String tuote, int hinta, int saldo){
        tavaratHinta.put(tuote, hinta);
        tavaratSaldo.put(tuote, saldo);
    }
    
    public int hinta(String tuote){
        if(tavaratHinta.containsKey(tuote)){
            return tavaratHinta.get(tuote);
        }
        return -99;
    }
            
    public int saldo(String tuote){
        if(tavaratSaldo.containsKey(tuote)){
            return tavaratSaldo.get(tuote);
        }
        return 0;
    }      
    
    public boolean ota(String tuote){
        if(tavaratSaldo.containsKey(tuote)){
            if(tavaratSaldo.get(tuote) <= 0){
                return false;
            }
            tavaratSaldo.put(tuote,tavaratSaldo.get(tuote) - 1);
            return true;
        }
        return false;
    }
    
    public Set<String> tuotteet(){
        return tavaratSaldo.keySet();
    }
    
    
}
